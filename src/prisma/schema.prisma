// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_PRISMA_URL") // uses connection pooling
  directUrl         = env("DATABASE_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("DATABASE_URL_NON_POOLING") // used for migrations
}

enum personaTypes {
  PASSPORTBRO
  DIGITALNOMAD
  EXPAT
  TOURIST
  BACKPACKER
}

model Users {
  id             Int           @id @unique @default(autoincrement())
  email          String        @unique
  password       String?
  created_At     DateTime      @default(now())
  bio            String?       @db.Text
  persona        personaTypes?
  jobTitle       String?
  companyName    String?
  userName       String?
  newUser        Boolean       @default(true)
  profilePicture String?
  Posts          Posts[]
  comments       Comments[]
  photos         Photos[]
}

model Posts {
  id        Int        @id @unique @default(autoincrement())
  postBody  String?    @db.VarChar(1500)
  createdAT DateTime   @default(now())
  imageSrc  String?
  videoSrc  String?
  // relations:
  author    Users      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comments[]
}

model Comments {
  id        Int      @id @unique @default(autoincrement())
  createdAt DateTime @default(now())
  comment   String   @db.VarChar(1500)

  // relations:
  post     Posts @relation(fields: [postId], references: [id])
  author   Users @relation(fields: [authorId], references: [id])
  postId   Int
  authorId Int
}

model Photos {
  id          Int      @id @unique @default(autoincrement())
  imageSrc    String
  description String?
  createdAt   DateTime @default(now())

  // relations:
  user   Users @relation(fields: [userId], references: [id])
  userId Int
}
